(window.webpackJsonp=window.webpackJsonp||[]).push([[110],{748:function(v,_,l){"use strict";l.r(_);var i=l(4),n=Object(i.a)({},(function(){var v=this,_=v.$createElement,l=v._self._c||_;return l("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[l("ul",[l("li",[v._v("架构原则,总结AKF最常用的15个架构原则如下:\n"),l("ol",[l("li",[v._v("N+1设计。永远不少于两个，通常为三个。")]),v._v(" "),l("li",[v._v("回滚设计。确保系统可以回滚到以前发布过的任何版本。")]),v._v(" "),l("li",[v._v("禁用设计。能够关闭任何发布的功能。")]),v._v(" "),l("li",[v._v("监控设计。在设计阶段就必须要考虑监控，而不是在实施完\n成之后补充。")]),v._v(" "),l("li",[v._v("设计多活数据中心。不要被一个数据中心的解决方案把自\n己限制住。")]),v._v(" "),l("li",[v._v("使用成熟的技术。只用确实好用的技术。")]),v._v(" "),l("li",[v._v("异步设计。只有在绝对必要的时候才进行同步调用。")]),v._v(" "),l("li",[v._v("无状态系统。只有当业务确实需要的时候，才使用状态")]),v._v(" "),l("li",[v._v("水平扩展非垂直升级。永远不要依赖更大、更快的系统")]),v._v(" "),l("li",[v._v("设计至少要有两个步骤的前瞻性。在扩展性问题发生前考\n虑好下一步的行动计划。")]),v._v(" "),l("li",[v._v("非核心则购买。如果不是你最擅长的，也提供不了差异化\n的竞争优势则直接购买。")]),v._v(" "),l("li",[v._v("使用商品化硬件。在大多数情况下，便宜的是最好的")]),v._v(" "),l("li",[v._v("小构建，小发布，快试错。全部研发要小构建，不断选\n代、让系统不断地成长")]),v._v(" "),l("li",[v._v("隔离故障。实现故障隔离设计，通过断路保护避免故障传\n拂和交叉影响。")]),v._v(" "),l("li",[v._v("自动化。设计和构建自动化的过程。如果机器可以做，就\n不要依赖于人。")])])])])])}),[],!1,null,null,null);_.default=n.exports}}]);