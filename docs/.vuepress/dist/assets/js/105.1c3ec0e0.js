(window.webpackJsonp=window.webpackJsonp||[]).push([[105],{746:function(t,a,_){"use strict";_.r(a);var s=_(4),r=Object(s.a)({},(function(){var t=this,a=t.$createElement,_=t._self._c||a;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"wireshark-实用过滤表达式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#wireshark-实用过滤表达式"}},[t._v("#")]),t._v(" wireshark 实用过滤表达式")]),t._v(" "),_("h2",{attrs:{id:"_1-关键字"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-关键字"}},[t._v("#")]),t._v(" 1 关键字")]),t._v(" "),_("ul",[_("li",[t._v("等于： == 或者 eq")]),t._v(" "),_("li",[t._v("与：&& 或者 and")]),t._v(" "),_("li",[t._v("或：|| 或者 or")]),t._v(" "),_("li",[t._v("非： ！或者 not")])]),t._v(" "),_("h2",{attrs:{id:"_2-针对ip过滤"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-针对ip过滤"}},[t._v("#")]),t._v(" 2 针对ip过滤")]),t._v(" "),_("ul",[_("li",[t._v("来源地址 ip 过滤，"),_("code",[t._v("ip.src")])])]),t._v(" "),_("p",[t._v("对源地址为192.168.0.1的包的过滤，即抓取源地址满足要求的包。")]),t._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",[_("code",[t._v("表达式为：ip.src == 192.168.0.1\n")])])]),_("ul",[_("li",[t._v("目的地址ip 过滤，"),_("code",[t._v("ip.dst")])])]),t._v(" "),_("p",[t._v("对目的地址为192.168.0.1的包的过滤，即抓取目的地址满足要求的包。")]),t._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",[_("code",[t._v("表达式为：ip.dst == 192.168.0.1\n")])])]),_("ul",[_("li",[t._v("原地址或目的地址 "),_("code",[t._v("ip.addr")])])]),t._v(" "),_("p",[t._v("对源或者目的地址为192.168.0.1的包的过滤，即抓取满足源或者目的地址的ip地址是192.168.0.1的包。")]),t._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",[_("code",[t._v("表达式为：\n ip.addr == 192.168.0.1,本表达式的等价表达式为\n ip.src == 192.168.0.1or ip.dst == 192.168.0.1\n")])])]),_("h2",{attrs:{id:"_3-针对协议"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-针对协议"}},[t._v("#")]),t._v(" 3 针对协议")]),t._v(" "),_("ol",[_("li",[t._v("使用在过滤器中填写协议名称")]),t._v(" "),_("li",[t._v("多个协议组合 使用 and or not 组合")])]),t._v(" "),_("h2",{attrs:{id:"_4-端口过滤"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4-端口过滤"}},[t._v("#")]),t._v(" 4 端口过滤")]),t._v(" "),_("p",[t._v("协议名+port 格式")]),t._v(" "),_("p",[t._v("例如：tcp.port 、udp.port 等")]),t._v(" "),_("h2",{attrs:{id:"_5-针对长度和内容的过滤"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_5-针对长度和内容的过滤"}},[t._v("#")]),t._v(" 5 针对长度和内容的过滤")]),t._v(" "),_("p",[t._v("(1) 针对长度的过虑（这里的长度指定的是数据段的长度）")]),t._v(" "),_("p",[t._v("表达式为：udp.length < 30   http.content_length <=20")]),t._v(" "),_("p",[t._v("(2) 针对数据包内容的过滤")]),t._v(" "),_("p",[t._v('表达式为：http.request.urimatches "vipscu"  （匹配http请求中含有vipscu字段的请求信息）')])])}),[],!1,null,null,null);a.default=r.exports}}]);